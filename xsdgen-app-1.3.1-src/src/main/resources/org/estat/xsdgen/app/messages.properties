app.name = org.estat.xsdgen.app.XSDGeneratorApp
app.title = XSD Generator
app.version = 1.3.1
app.copyright = Copyright (c) 2012 by the European Commission, represented by Eurostat.

button.start = Start
button.restart = Restart
button.previous = Back
button.next = Next
button.browse.dots = Browse...
button.save = Save
button.save.dsd.dots = Save DSD...
button.delete = Delete
button.generate.dots = Generate...

error = Error
filechooser.dsd.type = SDMX-ML DSD Message
filechooser.xsd.type = XML Schema Definition
mandatory.fields = * These fields are mandatory

cli.option.input = <path> the path to a valid source DSD file, for which to generate the XSD file
cli.option.output = <path> the path where to save the generated XSD file
cli.option.compact = the generated XSD file is for COMPACT messages (SDMX 2.0)
cli.option.cross = generate XSD for cross sectional format (SDMX 2.0)
cli.option.utility = generate XSD for utility format (SDMX 2.0)
cli.option.timeseries = the generated XSD file is for TIME SERIES messages (SDMX 2.1)
cli.option.flat = the generated XSD file is for FLAT messages (SDMX 2.1)
cli.option.xs = <dimension> the generated XSD file is for XS messages (SDMX 2.1)
cli.option.explicit = indicates whether explicit measures are used in the cross sectional format (SDMX 2.1)
cli.option.help = display this help message and exit

cli.error.command.line = Error: {0}
cli.error.help = Use -h or --help to see the list of all supported arguments.
cli.error.output.exists = Output file already exists.
cli.error.unknown.arguments = Unknown argument: {0}

cli.progress.load.dsd = Loading DSD file: {0}
cli.progress.info.dsd = DSD: {0} (SDMX {1})
cli.progress.generate.xsd = Generating XSD, output format {0}...
cli.progress.generate.flat = Generating XSD for FLAT messages...
cli.progress.generate.timeseries = Generating XSD for TIME SERIES messages...
cli.progress.generate.xs = Generating XSD for XS messages, dimension at observation {0}...
cli.progress.generate.xs.explicit = Generating XSD for XS messages, dimension at observation {0}, explicit measures...
cli.progress.write.xsd = Writing XSD file: {0}
cli.progress.done = Succeeded.

start.text.1 = The present application is a test client for XSD Generator library.
start.text.2 = The graphical user interface is designed in a wizard-like style, to easily guide you through the \
  process. On each step you may click the Next button to move forward or Back button to return to \
  the previous page.
start.text.3 = It supports both SDMX 2.0 and SDMX 2.1 standards. For SDMX 2.0 can produce XSDs for compact, utility \
  and cross-sectional formats, while for SDMX 2.1 can produce XSDs for all types of structure specific messages.

dsd.location.title = Select DSD Location
dsd.location.filesystem = Load from local file system
dsd.location.registry = Download from SDMX Registry

local.dsd.title = Select DSD
local.dsd.empty = Please select the DSD file.
local.dsd.load.error = Failed to load the DSD from specified file.
local.dsd.reference.error = Failed to load the referenced document (href {1}):\n{0}

registry.config.title = SDMX Registry Configuration

registry.config.save.label = Enter configuration name
registry.config.save.error.duplicate.name = Duplicate configuration name! Choose something else.
registry.config.save.error.empty.name = Please specify a configuration name!
registry.config.save.success = SDMX Registry Configuration saved.
registry.config.delete.confirm = Do you really want to delete {0} configuration?
registry.config.delete.success = SDMX Registry configuration {0} removed.

registry.config.domain = Domain*
registry.config.invalid.domain = The domain field is mandatory.
registry.config.username = Registry User*
registry.config.invalid.username = The username is mandatory.
registry.config.password = Registry Password*
registry.config.invalid.password = The password is mandatory.
registry.config.url = Registry URL*
registry.config.invalid.url = The URL is invalid.
registry.config.proxy = Proxy Host and Port
registry.config.invalid.proxy.port = Proxy port is invalid.
registry.config.proxy.username = Proxy User
registry.config.proxy.password = Proxy Password

registry.query.keyfamilies.error = Failed to query the configured SDMX Registry instance for all available key families.<br/>\
  Click the Back button and check current configuration again.
registry.query.keyfamlies.empty = No key families are available using the configured SDMX Registry instance.
registry.query.dsd.error = Failed to retrieve from SDMX Registry the DSD for key family {0}.

registry.select.keyfamily.title = Select DSD

results.dsd.title = DSD
results.dsd.sdmx.version = SDMX
results.dsd.id = ID
results.dsd.agency = Agency
results.dsd.version = Version

results.xsd.title = XSD

results.sdmx_2_0.option.compact = Compact
results.sdmx_2_0.option.cross_sectional = Cross Sectional
results.sdmx_2_0.option.utility = Utility

results.sdmx_2_1.option.flat = Flat
results.sdmx_2_1.option.timeseries = Time Series
results.sdmx_2_1.option.cross = XS: {0}
results.sdmx_2_1.option.explicit = [explicit]

results.xsd.generate.error = Failed to generate the XSD file ! {0}
results.xsd.save.error = Failed to save the XSD file !

results.xsd.save.success = XSD file successfully generated and saved.

results.dsd.save.error = Failed to save the DSD file ! {0}
results.dsd.save.success = DSD file successfully saved.

jars.sdmx_2_0.dependencies = {0}{1}libs;{0}{1}libs{1}sdmx_2_0;
jars.sdmx_2_1.dependencies = {0}{1}libs;{0}{1}libs{1}sdmx_2_1;
jars.sdmx_2_0.dev.dependencies = {0}{1}target{1}classes;{0}{1}src{1}distribution{1}libs;{0}{1}src{1}distribution{1}libs{1}sdmx_2_0;
jars.sdmx_2_1.dev.dependencies = {0}{1}target{1}classes;{0}{1}src{1}distribution{1}libs;{0}{1}src{1}distribution{1}libs{1}sdmx_2_1;